name: Python package tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-market-tracker:
    name: Market Tracker tests (pytest)
    runs-on: ubuntu-latest
    env:
      PIP_DISABLE_PIP_VERSION_CHECK: '1'
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov schemathesis fastapi sqlalchemy pandas yfinance httpx
          pip install -r market-tracker/requirements.txt
          pip install -e ./market-tracker

      - name: Run unit tests
        env:
          COVERAGE_FILE: .coverage.market_tracker.unit
          DATABASE_URL: sqlite:///./market_tracker_unit.db
        run: |
          set -e
          if [ -d market-tracker/tests/unit ]; then
            TARGET="market-tracker/tests/unit"
            MARKER="-m unit"
          else
            # Fallback to running all Market Tracker tests excluding explicit contract tests
            TARGET="market-tracker/tests"
            MARKER=""
          fi
          pytest ${TARGET} ${MARKER} \
            --cov=market-tracker/app \
            --cov-report=xml:coverage-market-tracker-unit.xml \
            --cov-report=term

      - name: Run integration tests
        env:
          COVERAGE_FILE: .coverage.market_tracker.integration
          DATABASE_URL: sqlite:///./market_tracker_integration.db
        run: |
          set -e
          if [ -d market-tracker/tests/integration ]; then
            pytest market-tracker/tests/integration -m integration \
              --cov=market-tracker/app \
              --cov-report=xml:coverage-market-tracker-integration.xml \
              --cov-report=term
          else
            echo "No integration tests found for Market Tracker. Skipping."
          fi

      - name: Run contract tests
        env:
          COVERAGE_FILE: .coverage.market_tracker.contract
          DATABASE_URL: sqlite:///./market_tracker_contract.db
        run: |
          set -e
          if [ -d market-tracker/tests/contract ]; then
            TARGET="market-tracker/tests/contract"
            MARKER="-m contract"
          elif [ -f market-tracker/tests/test_contracts.py ]; then
            TARGET="market-tracker/tests/test_contracts.py"
            MARKER=""
          else
            echo "No contract tests found for Market Tracker. Skipping."
            exit 0
          fi
          pytest ${TARGET} ${MARKER} \
            --cov=market-tracker/app \
            --cov-report=xml:coverage-market-tracker-contract.xml \
            --cov-report=term

  test-yahoo-etl:
    name: Yahoo ETL tests (pytest)
    runs-on: ubuntu-latest
    env:
      PIP_DISABLE_PIP_VERSION_CHECK: '1'
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov schemathesis fastapi sqlalchemy pandas yfinance httpx schedule
          pip install -r yahoo_etl/requirements.txt
          pip install -e ./yahoo_etl

      - name: Run unit tests
        env:
          COVERAGE_FILE: .coverage.yahoo_etl.unit
          DATABASE_URL: sqlite:///./yahoo_etl_unit.db
        run: |
          set -e
          if [ -d yahoo_etl/tests/unit ]; then
            TARGET="yahoo_etl/tests/unit"
            MARKER="-m unit"
          else
            TARGET="yahoo_etl/tests"
            MARKER=""
          fi
          pytest ${TARGET} ${MARKER} \
            --cov=yahoo_etl \
            --cov-report=xml:coverage-yahoo-etl-unit.xml \
            --cov-report=term

      - name: Run integration tests
        env:
          COVERAGE_FILE: .coverage.yahoo_etl.integration
          DATABASE_URL: sqlite:///./yahoo_etl_integration.db
        run: |
          set -e
          if [ -d yahoo_etl/tests/integration ]; then
            pytest yahoo_etl/tests/integration -m integration \
              --cov=yahoo_etl \
              --cov-report=xml:coverage-yahoo-etl-integration.xml \
              --cov-report=term
          else
            echo "No integration tests found for Yahoo ETL. Skipping."
          fi
