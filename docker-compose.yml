services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: market_tracker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  market-tracker:
    build:
      context: ./market-tracker
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/market_tracker
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./market-tracker:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  yahoo-etl:
    build:
      context: ./yahoo_etl
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/market_tracker
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./yahoo_etl:/app
    command: python scheduler.py

  grafana:
    image: grafana/grafana:${GRAFANA_VERSION:-11.2.2}
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      # Enable AWS default credentials chain in the container
      AWS_REGION: ${AWS_REGION:-us-east-1}
      AWS_SDK_LOAD_CONFIG: ${AWS_SDK_LOAD_CONFIG:-1}
      AWS_PROFILE: ${AWS_PROFILE:-}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-}
      AWS_SESSION_TOKEN: ${AWS_SESSION_TOKEN:-}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      # Optionally mount your local AWS profile for default credentials chain
      # - ${HOME}/.aws:/usr/share/grafana/.aws:ro
    depends_on:
      - postgres

volumes:
  postgres_data:
  grafana_data:
